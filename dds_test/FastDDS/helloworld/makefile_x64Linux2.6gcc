CPP= g++
CPPFLAGS = -c -Wall -fpic -m64 -O2 -std=c++0x
LN= g++
AR=ar
LDFLAGS= -m64
SYSLIBS= -ldl -lnsl -lm -lpthread -lrt
DEFINES= 

INCLUDES= -I. 

LIBS =  -lfastcdr -lfastrtps $(shell test -x "$$(which pkg-config)" && pkg-config libssl libcrypto --libs --silence-errors) $(SYSLIBS)

DIRECTORIES= output.dir output/x64Linux2.6gcc.dir lib.dir lib/x64Linux2.6gcc.dir bin.dir bin/x64Linux2.6gcc.dir

all: $(DIRECTORIES) MyType MyTypePublisherSubscriber


MyType_TARGET= lib/x64Linux2.6gcc/libMyType.so
MyType_TARGET_Z= lib/x64Linux2.6gcc/libMyType.a

MyType_CLIENT_EXAMPLE_TARGET= bin/x64Linux2.6gcc/MyTypePublisherSubscriber
MyType_COMMON_SRC_CXXFILES = MyType.cxx

MyType_COMMON_SRC_CPPFILES=

MyType_CLIENTSOURCES = MyTypePubSubTypes.cxx \
	MyTypePublisher.cxx \
	MyTypeSubscriber.cxx \
	MyTypePubSubMain.cxx

MyType_COMMONOBJS    = $(MyType_COMMON_SRC_CXXFILES:%.cxx=output/x64Linux2.6gcc/%.o) $(MyType_COMMON_SRC_CPPFILES:%.cpp=output/x64Linux2.6gcc/%.o)

MyType_CLIENTOBJS    = $(MyType_CLIENTSOURCES:%.cxx=output/x64Linux2.6gcc/%.o)

MyTypeOBJS+= $(MyType_COMMONOBJS) $(MyType_CLIENTOBJS)
OBJS+= $(MyTypeOBJS)

$(MyType_TARGET): $(MyType_COMMONOBJS)
	$(LN) $(LDFLAGS) -shared -o $(MyType_TARGET) $(MyType_COMMONOBJS) $(LIBS) -Llib/x64Linux2.6gcc 

$(MyType_TARGET_Z): $(MyType_COMMONOBJS)
	$(AR) -cru $(MyType_TARGET_Z) $(MyType_COMMONOBJS)

$(MyType_CLIENT_EXAMPLE_TARGET): $(MyTypeOBJS) lib/x64Linux2.6gcc/libMyType.a 
	$(LN) $(LDFLAGS) -o $@ $(MyTypeOBJS) -Wl,-Bstatic -Llib/x64Linux2.6gcc -lMyType  -Wl,-Bdynamic $(LIBS)

MyTypePublisherSubscriber : $(MyType_CLIENT_EXAMPLE_TARGET)
MyType: $(MyType_TARGET) $(MyType_TARGET_Z) MyTypePublisherSubscriber

output/x64Linux2.6gcc/%.o:%.cxx
	$(CPP) $(CPPFLAGS) $(INCLUDES) $(DEFINES) -c $< -o $@

output/x64Linux2.6gcc/%.o:%.cpp
	$(CPP) $(CPPFLAGS) $(INCLUDES) $(DEFINES) -c $< -o $@

.PHONY: MyType MyTypePublisherSubscriber

clean:
	@rm -f $(OBJS)

%.dir : 
	@echo "Checking directory $*"
	@if [ ! -d $* ]; then \
		echo "Making directory $*"; \
		mkdir -p $* ; \
	fi;
